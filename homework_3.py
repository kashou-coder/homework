# 1. Реализовать функцию, принимающую два числа (позиционные аргументы) и выполняющую их деление.
# Числа запрашивать у пользователя, предусмотреть обработку ситуации деления на ноль.

def sum():
    try:
        arg_1 = int(input("Введите первое число: "))
        arg_2 = int(input("Введите второе число : "))
    except ValueError:
        return
    try:
        arg_3 = arg_1 / arg_2
        return arg_3
    except ZeroDivisionError:
        return
arg_4 = sum()
print(round(arg_4))


# 2. Реализовать функцию, принимающую несколько параметров, описывающих данные пользователя:
# имя, фамилия, год рождения, город проживания, email, телефон.
# Функция должна принимать параметры как именованные аргументы.
# Реализовать вывод данных о пользователе одной строкой.

def char(**kwargs):

    return kwargs
char_1 = char(name = "Oleg",
              surname = "Kashuba",
              year = "1988",
              city = "Moscow",
              email = "directfull@ya.ru",
              telephone = "89889669696")
print(char_1)


# 3. Реализовать функцию my_func(), которая принимает три позиционных аргумента,
# и возвращает сумму наибольших двух аргументов.

def my_func(arg_1, arg_2, arg_3):
    if arg_2 < arg_1:
        return arg_1 + arg_3
    elif arg_1 < arg_2:
        return arg_2 + arg_3
    elif arg_1 < arg_3:
        return arg_3 + arg_2
    elif arg_3 < arg_1:
        return arg_1 + arg_2

s_f = my_func(1, 2, 3)
s_s = my_func(4, 1, 3)
s_th = my_func(4, 8, 3)
print(s_f, s_s, s_th)


# 4. Программа принимает действительное положительное число x и целое отрицательное число y.
# Необходимо выполнить возведение числа x в степень y. Задание необходимо реализовать в виде
# функции my_func(x, y). При решении задания необходимо обойтись без встроенной функции возведения числа
# в степень.
# Подсказка: попробуйте решить задачу двумя способами. Первый — возведение в степень с помощью оператора **.
# Второй — более сложная реализация без оператора **, предусматривающая использование цикла.

def my_func(x, y):
    res = 1
    for i in range(abs(y)): # действие выполняется y количество раз с переводом в положительное
                            # res = 2 * 1 и res = 2 * 2
        res *= x
    if y <= 0:
        return 1 / res      # возведение в отрицательную степень 1 / x в степени y или 1 / 4

print(my_func(2, -2))


# 5. Программа запрашивает у пользователя строку чисел, разделенных пробелом.
# При нажатии Enter должна выводиться сумма чисел.
# Пользователь может продолжить ввод чисел, разделенных пробелом и снова нажать Enter.
# Сумма вновь введенных чисел будет добавляться к уже подсчитанной сумме.
# Но если вместо числа вводится специальный символ, выполнение программы завершается.
# Если специальный символ введен после нескольких чисел, то вначале нужно добавить сумму этих чисел
# к полученной ранее сумме и после этого завершить программу.

def sum_and():
    count = 0
    try:
        while True:
            list_str = list((input("Введите числа через пробел и нажмите Enter: ").split()))
            list_numbers = list(map(int, list_str))
            for i in list_numbers:
                count += i
            print(count)
    except ValueError:
        return "Вы ввели неверное значение!"

print(sum_and())


# 6. Реализовать функцию int_func(), принимающую слово из маленьких латинских букв и возвращающую его же,
# но с прописной первой буквой. Например, print(int_func(‘text’)) -> Text.
# Продолжить работу над заданием. В программу должна попадать строка из слов, разделенных пробелом.
# Каждое слово состоит из латинских букв в нижнем регистре. Сделать вывод исходной строки,
# но каждое слово должно начинаться с заглавной буквы. Необходимо использовать
# написанную ранее функцию int_func().
#
def int_func():
    x = list(input("Введите текст с маленькой буквы: ").title().split())
    for i in x:
        print(i)

print(int_func())